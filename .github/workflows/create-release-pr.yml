name: Create Pull Request
on:
  issue_comment:
    types: [created]

jobs:
  checker:
    runs-on: ubuntu-latest
    steps:
      - name: Logger
        run: |
          echo "Event Name |${{github.event_name}}|"
          echo "Author Association |${{github.event.comment.author_association}}|"
          echo "Comment Body |${{github.event.comment.body}}|"
  createPullRequest:
    if: |
      github.event_name == 'issue_comment' &&
      (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') &&
      startsWith(github.event.comment.body, '/create release')
    runs-on: ubuntu-latest
    container: cypress/browsers:node12.13.0-chrome80-ff74
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node_version: 12
          registry-url: 'https://npm.pkg.github.com'
      - name: Install Dependencies and Build Packages
        run: make init
      - name: Run Components Test
        run: make test-component
      - name: Git Identity
        run: |
          git config --global user.name 'frontegg'
          git config --global user.email 'frontegg@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "@frontegg:registry=http://registry.npmjs.org/" > .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Commit Version UP
        run: |
          echo "Publishing DEV version - v${{ steps.changelog.outputs.version }}-alpha.${{ github.run_number }}"
          yarn lerna version prerelease --preid "alpha.${{ github.run_number }}" --no-git-tag-version --yes
          yarn prettier-hook
          yarn commit-version-dev
          yarn lerna publish from-package --dist-tag next --force-publish --contents dist --yes --no-git-tag-version

          yarn lerna version --conventional-commits --conventional-graduate --no-changelog --no-git-tag-version --yes
          yarn prettier-hook
          yarn commit-version
      - name: Set current CHANGELOG to output
        id: changelog
        shell: bash -ex {0}
        run: |
          version=$(node -p 'require("./lerna.json").version')
          echo "::set-output name=version::${version}"
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ secrets.GITHUB_WORKSPACE }}
          commit-message: "Update v${{ steps.changelog.outputs.version }}"
          committer: GitHub <noreply@github.com>
          author: "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
          title: 'v${{ steps.changelog.outputs.version }}'
          body: |
            ## v${{ steps.changelog.outputs.version }}
            ### Breaking Changes
            - [ ] TODO
            ### Features
            - [ ] TODO
            ### Bug Fixes
            - [ ] TODO
          labels: "Type: Release"
          branch: "release/next"
          request-to-parent: false
